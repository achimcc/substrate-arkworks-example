
//! Autogenerated weights for `pallet_ark_demo`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-09-25, STEPS: `50`, REPEAT: `3`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `behemoth`, CPU: `AMD Ryzen Threadripper 3970X 32-Core Processor`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/release/node-ark-demo
// benchmark
// pallet
// --chain=dev
// --pallet=pallet_ark_demo
// --extrinsic=ed_on_bls12_377_mul_affine_opt
// --steps=50
// --repeat=3
// --no-storage-info
// --template=frame-weight-template.hbs
// --json-file=./results/results.json
// --output=./results/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_ark_demo`.
pub trait WeightInfo {
	fn ed_on_bls12_377_mul_affine_opt(x: u32, ) -> Weight;
}

/// Weights for `pallet_ark_demo` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// The range of component `x` is `[1, 16]`.
	fn ed_on_bls12_377_mul_affine_opt(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 272_883_000 picoseconds.
		Weight::from_parts(254_903_904, 0)
			// Standard Error: 60_226
			.saturating_add(Weight::from_parts(21_670_194, 0).saturating_mul(x.into()))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// The range of component `x` is `[1, 16]`.
	fn ed_on_bls12_377_mul_affine_opt(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 272_883_000 picoseconds.
		Weight::from_parts(254_903_904, 0)
			// Standard Error: 60_226
			.saturating_add(Weight::from_parts(21_670_194, 0).saturating_mul(x.into()))
	}
}
